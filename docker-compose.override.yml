version: "4.26"
services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - catalogdb_volume:/data/db
  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"
  discountdb:
    container_name: discountdb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - discountdb_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Password12*
      - POSTGRES_DB=discountdb
  identitydb:
    container_name: identitydb
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - identitydb_volume:/opt/mssql
    environment:
        ACCEPT_EULA: "Y"
        SA_PASSWORD: "Password12*"
  orderdb:
    container_name: orderdb
    restart: always
    ports:
      - "1444:1433"
    volumes:
      - orderdb_volume:/opt/mssql
    environment:
        ACCEPT_EULA: "Y"
        SA_PASSWORD: "Password12*"
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_NODENAME: "rabbit@rabbitmq"
      RABBITMQ_USE_LONGNAME: "true"  
  identityserver.api:
    container_name: identityserver.api
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DefaultConnection=Server=identitydb,1433;Database=IdentityDb;User=sa;Password=Password12*"
    ports:
      - "5001:80"
    depends_on:
      - identitydb
  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQUrl=rabbitmq
      - IdentityServerURL=http://identityserver.api
      - DatabaseSettings:ConnectionString=mongodb://catalogdb:27017
    ports:
      - "5051:80"
    depends_on:
      - catalogdb
  photostock.api:
    container_name: photostock.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identityserver.api
    ports:
      - "5052:80"
    volumes:
      - type: bind
        source: D:\pictures
        target: /app/wwwroot/photos
  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identityserver.api
      - RedisSettings:Host=basketdb
      - RedisSettings:Port=6379
    ports:
      - "5053:80"
    depends_on:
      - basketdb
  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identityserver.api
      - "ConnectionStrings:PostgreSql=User ID=admin;Password=Password12*;Server=discountdb;Port=5432;Database=discountdb;Integrated Security=true;Pooling=true"
    ports:
      - "5054:80"
    depends_on:
      - discountdb
  fakepayment.api:
    container_name: fakepayment.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identityserver.api
      - RabbitMQUrl=rabbitmq
    ports:
      - "5056:80"
  order.api:
    container_name: order.api
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identityserver.api
      - RabbitMQUrl=rabbitmq
      - "ConnectionStrings:DefaultConnection=Server=orderdb,1433;Database=OrderDb;User=sa;Password=Password12*"
    ports:
      - "5055:80"
    depends_on:
      - orderdb
  gateway.api:
    container_name: gateway.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerURL=http://identityserver.api
    ports:
      - "5000:80"
  aspnetcoremvc.web:
    container_name: aspnetcoremvc.web
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ServiceApiSettings:IdentityBaseUri=http://identityserver.api
      - ServiceApiSettings:GatewayBaseUri=http://gateway.api
    ports:
      - "5050:80"
    depends_on:
      - gateway.api
      - identityserver.api
      - catalog.api
      - basket.api
      - discount.api
      - order.api
      - photostock.api
      - fakepayment.api